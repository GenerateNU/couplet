---
openapi: 3.1.0

info:
  version: 0.0.0
  title: Couplet API
  description: Connect with other users through local events

paths:
  /health-check:
    get:
      summary: Check if the server is running and servicing requests
      operationId: healthCheck
      responses:
        "200":
          description: The server is healthy
  /users:
    post:
      summary: Create a new user
      operationId: createUser
      requestBody:
        description: User to create
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: Successfully created user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          $ref: "#/components/responses/BadRequest"
    get:
      # TODO: Paginate this
      summary: Get all users
      operationId: getAllUsers
      responses:
        "200":
          description: Successfully retrieved all users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
  /users/{userId}:
    get:
      summary: Get a user by their user ID
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          description: ID of user to retrieve
          required: true
          schema:
            $ref: "#/components/schemas/UserId"
      responses:
        "200":
          description: Successfully retrieved specified user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          $ref: "#/components/responses/NotFound"
  /events:
    post:
      summary: Create a new event
      operationId: createEvent
      requestBody:
        description: Event to create
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Event"
      responses:
        "200":
          description: Successfully created event
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        "400":
          $ref: "#/components/responses/BadRequest"
  /events/{eventId}:
    delete:
      summary: Delete an event by its event ID
      operationId: deleteEventById
      parameters:
        - name: eventId
          in: path
          description: ID of event to delete
          required: true
          schema:
            $ref: "#/components/schemas/EventId"
      responses:
        "204":
          description: Successfully deleted specified event
        "404":
          $ref: "#/components/responses/NotFound"

components:
  responses:
    UnexpectedError:
      description: An unexpected error occurred
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    BadRequest:
      description: Invalid request body
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
  schemas:
    # Address:
    #   type: object
    #   required:
    #     - id
    #     - line1
    #     - zipCode
    #     - city
    #     - state
    #     - country
    #   properties:
    #     id:
    #       $ref: "#/components/schemas/AddressId"
    #       x-oapi-codegen-extra-tags:
    #         gorm: primaryKey, default:gen_random_uuid()
    #     line1:
    #       type: string
    #       minLength: 1
    #       example: 360 Huntington Ave
    #     line2:
    #       type: string
    #       minLength: 1
    #       example: Room 270
    #     zipCode:
    #       type: string
    #       minLength: 5
    #       maxLength: 5
    #       example: 02115
    #     city:
    #       type: string
    #       minLength: 1
    #       example: Boston
    #     state:
    #       type: string
    #       minLength: 2
    #       maxLength: 2
    #       example: MA
    #     country:
    #       type: string
    #       minLength: 2
    #       maxLength: 2
    #       example: US
    # AddressId:
    #   type: string
    #   format: uuid
    #   example: 5e91507e-5630-4efd-9fd4-799178870b10
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: uint16
          minimum: 100
          maximum: 599
          example: 500
        message:
          type: string
          example: Internal server error
    Event:
      type: object
      required:
        - id
        - createdAt
        - updatedAt
        - name
        - bio
        - address
        - images
        - tags
        - OrganizationID
      properties:
        id:
          $ref: "#/components/schemas/EventId"
          x-oapi-codegen-extra-tags:
            gorm: primaryKey, default:gen_random_uuid()
        createdAt:
          type: string
          format: date-time
          example: 2022-02-22T11:22:33Z
        updatedAt:
          type: string
          format: date-time
          example: 2022-02-22T11:22:33Z
        name:
          type: string
          minLength: 1
          example: The Big Event
        bio:
          type: string
          minLength: 1
          example: Come to the Big Event and have the best night of your life!
        address:
          type: string
          minLength: 1
          example: 420 Huntington Ave, Boston, MA 02115
          # $ref: "#/components/schemas/Address"
        images:
          type: array
          items:
            type: string
            format: uri
            example: https://example.com/image.png
          minItems: 1
        externalLink:
          type: string
          format: uri
          example: https://example.com
        tags:
          type: array
          items:
            type: string
            enum: [indoors, outdoors]
            # TODO: Define more tags
        OrganizationID:
          type: string
          format: uuid
          example: 5e91507e-5630-4efd-9fd4-799178870b10
          # TODO:
          # schedule TBD
          # - optional datetime range (within a week)
          # - optional recurring until (some day)
          # price range low~high
    EventId:
      type: string
      format: uuid
      example: 5e91507e-5630-4efd-9fd4-799178870b10
    Coordinate:
      type: object
      required:
        - longitude
        - latitude
      properties:
        longitude:
          type: number
          format: double
          minimum: -180
          maximum: 180
          example: 71.43
        latitude:
          type: number
          format: double
          minimum: -90
          maximum: 90
          example: 32.82
    Organization:
      type: object
      required:
        - id
        - createdAt
        - updatedAt
        - name
        - events
        - tags
        - bio
        - image
      properties:
        id:
          $ref: "#/components/schemas/OrganizationId"
          x-oapi-codegen-extra-tags:
            gorm: primaryKey, default:gen_random_uuid()
        createdAt:
          type: string
          format: date-time
          example: 2022-02-22T11:22:33Z
        updatedAt:
          type: string
          format: date-time
          example: 2022-02-22T11:22:33Z
        name:
          type: string
          minLength: 1
          example: The Events Company
        events:
          type: array
          items:
            $ref: "#/components/schemas/Event"
        tags:
          type: array
          items:
            type: string
            enum: [nonprofit]
            # TODO: Define more tags
        bio:
          type: string
          minLength: 1
          example: At The Events Company, we connect people through events
        image:
          type: string
          format: uri
          example: https://example.com/image.png
    OrganizationId:
      type: string
      format: uuid
      example: 5e91507e-5630-4efd-9fd4-799178870b10
    User:
      type: object
      required:
        - id
        - createdAt
        - updatedAt
        - firstName
        - lastName
        - age
      properties:
        id:
          $ref: "#/components/schemas/UserId"
          x-oapi-codegen-extra-tags:
            gorm: primaryKey, default:gen_random_uuid()
        createdAt:
          type: string
          format: date-time
          example: 2022-02-22T11:22:33Z
        updatedAt:
          type: string
          format: date-time
          example: 2022-02-22T11:22:33Z
        firstName:
          type: string
          minLength: 1
          example: Bob
        lastName:
          type: string
          minLength: 1
          example: Smith
        age:
          type: integer
          format: uint8
          minimum: 18
          example: 22
          # TODO
          # gender
          # hashed password
          # email
          # phone number/social
          # Location
          # preferences
          # - what they like
          # Profile
          # - pics
          # - about me
          # matches TBD
    UserId:
      type: string
      format: uuid
      example: 5e91507e-5630-4efd-9fd4-799178870b10
